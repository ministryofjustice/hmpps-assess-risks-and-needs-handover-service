version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@8.2
  mem: circleci/rememborb@0.0.2
  slack: circleci/slack@4.13.3

parameters:
  alerts-slack-channel:
    type: string
    default: "hmpps-assessments-notifications"
  releases-slack-channel:
    type: string
    default: hmpps-assessments-notifications
  deploy:
    description: Trigger a manual deployment
    type: string
    default: ""

notify-capita-slack-fail: &notify-capita-slack-fail
  post-steps:
    - slack/notify:
        event: fail
        channel: oasys-arns-intergration
        custom: |
          {
            "blocks": [
              {
                "type": "header",
                "text": {
                  "type": "plain_text",
                  "text": "Deployment Failed! :sadpanda:",
                  "emoji": true
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "@arn-devs @sp-devs"
                }
              },
              {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Project*: SAN/SP \n *Environment*: <https://arns-oastub-test.hmpps.service.justice.gov.uk/|Test>"
                  }
              },
              {
                "type": "actions",
                "elements": [
                  {
                    "type": "button",
                    "action_id": "failed_deploy_view",
                    "text": {
                      "type": "plain_text",
                      "text": "View Job"
                    },
                    "url": "${CIRCLE_BUILD_URL}"
                  }
                ]
              }
            ]
          }

jobs:
  validate:
    machine:
      image: ubuntu-2204:current
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle.kts" }}
            - gradle-
      - run:
          command: make dev-up lint test
      - run:
          name: Store container logs
          command: make save-logs OUTPUT_LOGS_DIR=~/docker-logs
          when: on_fail
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle.kts" }}
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests
      - store_artifacts:
          path: ~/docker-logs

  e2e_test:
    machine:
      image: ubuntu-2204:current
      resource_class: medium
    working_directory: ~/app
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Extract saved container image
          command: docker load --input ~/app/docker_cache/build_image.tar
      - mem/recall:
          env_var: APP_VERSION
      - run:
          name: Stand up a test environment
          command: make test-up
      - run:
          name: Run the end-to-end tests
          command: make e2e-ci
      - run:
          name: Store container logs
          command: make save-logs OUTPUT_LOGS_DIR=~/docker-logs PROJECT_NAME="hmpps-assess-risks-and-needs-test"
          when: on_fail
      - store_artifacts:
          path: e2e/cypress/screenshots
      - store_artifacts:
          path: ~/docker-logs

  notify-capita-slack-success:
    docker:
      - image: cimg/base:stable
    steps:
      - slack/notify:
          event: always
          channel: oasys-arns-intergration
          custom: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "Deployment Successful! :happy_bunny:",
                    "emoji": true
                  }
                },
                {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "*Project*: SAN/SP \n *Environment*: <https://arns-oastub-test.hmpps.service.justice.gov.uk/|Test>"
                    }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "action_id": "success_deploy_view",
                      "text": {
                        "type": "plain_text",
                        "text": "View Job"
                      },
                      "url": "https://app.circleci.com/pipelines/workflows/${CIRCLE_WORKFLOW_ID}"
                    }
                  ]
                }
              ]
            }

workflows:
  version: 2
  build-test-and-deploy:
    when:
      not: << pipeline.parameters.deploy >>
    jobs:
      - validate:
          filters:
            tags:
              ignore: /.*/
      - hmpps/helm_lint:
          name: helm_lint
      - hmpps/build_docker:
          name: build_docker
          publish: false
          persist_container_image: true
          jira_update: true
          pipeline_id: << pipeline.id >>
          pipeline_number: << pipeline.number >>
          context: hmpps-common-vars
      - e2e_test:
          context: hmpps-common-vars
          requires:
            - build_docker
      - hmpps/publish_docker:
          name: publish_docker
          publish_latest_tag: true
          context: hmpps-common-vars
          requires:
            - validate
            - build_docker
            - e2e_test
            - helm_lint
          filters:
            branches:
              only:
                - main
      - hmpps/deploy_env:
          name: deploy_dev
          env: "dev"
          jira_update: true
          pipeline_id: << pipeline.id >>
          pipeline_number: << pipeline.number >>
          context: hmpps-common-vars
          filters:
            branches:
              only:
                - main
          requires:
            - publish_docker
          helm_timeout: 5m
      - request-preprod-approval:
          type: approval
          filters:
            branches:
              only:
                - main
          requires:
            - deploy_dev
      - hmpps/deploy_env:
          name: deploy_preprod
          env: "preprod"
          jira_update: true
          jira_env_type: staging
          pipeline_id: <<pipeline.id>>
          pipeline_number: <<pipeline.number>>
          context:
            - hmpps-common-vars
            - hmpps-assess-risks-and-needs-integrations-preprod
          filters:
            branches:
              only:
                - main
          requires:
            - request-preprod-approval
          helm_timeout: 5m
      - request-prod-approval:
          type: approval
          filters:
            branches:
              only:
                - main
          requires:
            - deploy_preprod
      - hmpps/deploy_env:
          name: deploy_prod
          env: "prod"
          jira_update: true
          jira_env_type: production
          pipeline_id: <<pipeline.id>>
          pipeline_number: <<pipeline.number>>
          slack_notification: true
          slack_channel_name: << pipeline.parameters.releases-slack-channel >>
          context:
            - hmpps-common-vars
            - hmpps-assess-risks-and-needs-integrations-prod
          filters:
            branches:
              only:
                - main
          requires:
            - request-prod-approval
          helm_timeout: 5m

  deploy-to-test-env:
    when:
      and:
        - equal: [ "test", << pipeline.parameters.deploy >> ]
    jobs:
      - hmpps/build_docker:
          name: build_docker
          publish: false
          persist_container_image: true
          jira_update: true
          pipeline_id: << pipeline.id >>
          pipeline_number: << pipeline.number >>
          context:
            - hmpps-common-vars
            - hmpps-assess-risks-and-needs-integrations-test
      - hmpps/publish_docker:
          name: publish_docker
          publish_latest_tag: false
          context: hmpps-common-vars
          requires:
            - build_docker
      - hmpps/deploy_env:
          name: deploy_test
          env: "test"
          jira_update: true
          jira_env_type: testing
          pipeline_id: << pipeline.id >>
          pipeline_number: << pipeline.number >>
          context:
            - hmpps-common-vars
            - hmpps-assess-risks-and-needs-integrations-test
          requires:
            - publish_docker
          helm_timeout: 5m

  # weekly-deploy-to-test-env:
  #   triggers:
  #     - schedule:
  #         cron: "0 20 * * 0"
  #         filters:
  #           branches:
  #             only:
  #               - main
  #   jobs:
  #     - hmpps/trigger_job:
  #         name: Deploy Handover Service
  #         repository: hmpps-assess-risks-and-needs-handover-service
  #         branch: main
  #         build_parameters: '{ "deploy": "test" }'
  #         follow_timeout: 1000
  #         context:
  #           - hmpps-common-vars
  #         token: $CIRCLE_TOKEN
  #         <<: *notify-capita-slack-fail
  #     - hmpps/trigger_job:
  #         name: Deploy Coordinator API
  #         repository: hmpps-assess-risks-and-needs-coordinator-api
  #         branch: main
  #         build_parameters: '{ "deploy": "test" }'
  #         follow_timeout: 1000
  #         context:
  #           - hmpps-common-vars
  #         token: $CIRCLE_TOKEN
  #         <<: *notify-capita-slack-fail
  #     - hmpps/trigger_job:
  #         name: Deploy OASTUB UI
  #         repository: hmpps-assess-risks-and-needs-oastub-ui
  #         branch: main
  #         build_parameters: '{ "deploy": "test" }'
  #         follow_timeout: 1000
  #         context:
  #           - hmpps-common-vars
  #         token: $CIRCLE_TOKEN
  #         <<: *notify-capita-slack-fail
  #     - hmpps/trigger_job:
  #         name: Deploy SAN UI
  #         repository: hmpps-strengths-based-needs-assessments-ui
  #         branch: main
  #         build_parameters: '{ "deploy": "test" }'
  #         follow_timeout: 1000
  #         context:
  #           - hmpps-common-vars
  #         token: $CIRCLE_TOKEN
  #         <<: *notify-capita-slack-fail
  #     - hmpps/trigger_job:
  #         name: Deploy SAN API
  #         repository: hmpps-strengths-based-needs-assessments-api
  #         branch: main
  #         build_parameters: '{ "deploy": "test" }'
  #         follow_timeout: 1000
  #         context:
  #           - hmpps-common-vars
  #         token: $CIRCLE_TOKEN
  #         <<: *notify-capita-slack-fail
  #     - hmpps/trigger_job:
  #         name: Deploy Sentence Plan UI
  #         repository: hmpps-sentence-plan-ui
  #         branch: main
  #         build_parameters: '{ "deploy": "test" }'
  #         follow_timeout: 1000
  #         context:
  #           - hmpps-common-vars
  #         token: $CIRCLE_TOKEN
  #         <<: *notify-capita-slack-fail
  #     - hmpps/trigger_job:
  #         name: Deploy Sentence Plan API
  #         repository: hmpps-sentence-plan
  #         branch: main
  #         build_parameters: '{ "deploy": "test" }'
  #         follow_timeout: 1000
  #         context:
  #           - hmpps-common-vars
  #         token: $CIRCLE_TOKEN
  #         <<: *notify-capita-slack-fail
  #     - notify-capita-slack-success:
  #         context:
  #           - hmpps-common-vars
  #         requires:
  #           - Deploy Handover Service
  #           - Deploy Coordinator API
  #           - Deploy OASTUB UI
  #           - Deploy SAN UI
  #           - Deploy SAN API
  #           - Deploy Sentence Plan UI
  #           - Deploy Sentence Plan API

  security:
    triggers:
      - schedule:
          cron: "15 7 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/gradle_owasp_dependency_check:
          cache_key: "v2_0"
          jdk_tag: "21.0"
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/trivy_latest_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/veracode_pipeline_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
  security-weekly:
    triggers:
      - schedule:
          cron: "0 5 * * 1"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/veracode_policy_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars

executors:
  java:
    docker:
      - image: cimg/openjdk:21.0
        environment:
          _JAVA_OPTIONS: -Xmx1024m -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2
            -XX:ParallelGCThreads=2
            -Djava.util.concurrent.ForkJoinPool.common.parallelism=2
            -Dorg.gradle.daemon=false
      - image: cimg/redis:7.2
        environment:
          ALLOW_EMPTY_PASSWORD: yes
